@model UsersDiosna.Sheme.Models.SchemeEditor
@using UsersDiosna.Sheme.Models
@{
    ViewBag.Title = "Scheme editor";
}

<h4>Scheme Editor</h4>
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    foreach (DynValue val in Model.SchemeTags)
    {
        <a class="btn btn-primary btn-xs" data-toggle="collapse" href="#@val.id" aria-expanded="false">
            Dynamic value of tag: @val.column
        </a>

        <div class="collapse" id="@val.id">
            <div class="card card-block">
                <div class="form-inline">
                    <span class="col-sm-1">Table:</span> <input type="text" class="col-sm-1 form-control input-xs" name="tableEdit_@val.id" value="@val.table" />
                    <span class="col-sm-1">Column:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="columnEdit_@val.id" value="@val.column" />
                    <span class="col-sm-1">Ratio:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="ratioEdit_@val.id" value="@val.ratio" />
                    <span class="col-sm-1">Offset:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="offsetEdit_@val.id" value="@val.offset" />
                    <span class="col-sm-1">Unit:</span> <input type="text" class="col-sm-1  form-control input-xs" name="unitEdit_@val.id" value="@val.unit" />
                    <span class="col-sm-1">Text color:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="textColorEdit_@val.id" value="@val.textColor" />
                    <br />
                </div>
            </div>
        </div>
    }
    <a class="btn btn-primary btn-xs" data-toggle="collapse" href="#addDynVal" aria-expanded="false">
        Add new dynamic value
    </a>

    <div class="collapse" id="addDynVal">
        <div class="card card-block">
            <div class="form-inline">
                <span class="col-sm-1">Table:</span> <input type="text" class="col-sm-1 form-control input-xs" name="tableNew" />
                <span class="col-sm-1">Column:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="columnNew" />
                <span class="col-sm-1">Ratio:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="ratioNew" />
                <span class="col-sm-1">Offset:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="offsetNew" />
                <span class="col-sm-1">Unit:</span> <input type="text" class="col-sm-1  form-control input-xs" name="unitNew" />
                <span class="col-sm-1">Text color:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="textColorNew" />
                <br />
            </div>
        </div>
    </div>

    @Html.Raw(File.ReadAllText(Server.MapPath(Model.relativePath)))
    @*
        <br>Second svg
        <object type="image/svg+xml" data="@Model.relativePath">
            Your object does not suupport SVG
        </object>
    *@
    foreach (AgeBar ageBar in Model.SchemeAgeBars)
    {
        var tagAge = Model.BindingTags.First(p => p.id == ageBar.id || p.name == ageBar.id);
        <a class="btn btn-primary btn-xs" data-toggle="collapse" href="#@ageBar.id" aria-expanded="false">
            Age Bar from tag:  @tagAge.columnName
        </a>

        <div class="collapse" id="@ageBar.id">
            <div class="card card-block">
                <div class="form-inline">
                    <span class="col-sm-1">Table:</span> <input type="text" class="col-sm-1 form-control input-xs" name="tableEdit_@ageBar.id" ageBarue="@tagAge.tableName" />
                    <span class="col-sm-1">Column:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="columnEdit_@ageBar.id" ageBarue="@tagAge.columnName" />
                    <span class="col-sm-1">Max. Age:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="ratioEdit_@ageBar.id" ageBarue="@ageBar.maxAge" />
                    <span class="col-sm-1">First color:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="offsetEdit_@ageBar.id" ageBarue="@ageBar.firstColor" />
                    <span class="col-sm-1">Second limit:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="offsetEdit_@ageBar.id" ageBarue="@ageBar.firstLimit" />
                    <span class="col-sm-1">Second color:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="offsetEdit_@ageBar.id" ageBarue="@ageBar.secondColor" />
                    <span class="col-sm-1">Third limit:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="offsetEdit_@ageBar.id" ageBarue="@ageBar.secLimit" />
                    <span class="col-sm-1">Third color:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="offsetEdit_@ageBar.id" ageBarue="@ageBar.thirdColor" />
                    <br />
                </div>
            </div>
        </div>
}

foreach (Graphiclist graphicList in Model.SchemeGraphicsList)
{
        var tag = Model.BindingTags.First(p => p.id == graphicList.id || p.name == graphicList.name);
        <a class="btn btn-primary btn-xs" data-toggle="collapse" href="#@graphicList.id" aria-expanded="false">
            GraphicList for tag:  @tag.columnName
        </a>

        <div class="collapse" id="@graphicList.id">
            <div class="card card-block">
                <div class="form-inline">
                    <span class="col-sm-1">Table:</span> <input type="text" class="col-sm-1 form-control input-xs" name="tableEdit_@graphicList.id" graphicListue="@tag.tableName" />
                    <span class="col-sm-1">Column:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="columnEdit_@graphicList.id" graphicListue="@tag.columnName" />
                    @for (int i = 0; i < graphicList.items.Count; i++)
                    {
                        <span class="col-sm-1">Index:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="indexEdit_@graphicList.id" graphicListue="@graphicList.items[i].index" />
                        <span class="col-sm-1">Path:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="pathEdit_@graphicList.id" graphicListue="@graphicList.items[i].path" />
                    }
                    <br />
                </div>
            </div>
        </div>
    }

    foreach (Textlist textList in Model.SchemeTextlist)
    {
            var tagText = Model.BindingTags.First(p => p.id == textList.id || p.name == textList.name );
        <a class="btn btn-primary btn-xs" data-toggle="collapse" href="#@textList.id" aria-expanded="false">
            TextList binded on tag: @tagText.columnName
        </a>

        <div class="collapse" id="@textList.id">
            <div class="card card-block">
                <div class="form-inline">
                    <span class="col-sm-1">Table:</span> <input type="text" class="col-sm-1 form-control input-xs" name="tableEdit_@textList.id" textListue="@tagText.tableName" />
                    <span class="col-sm-1">Column:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="columnEdit_@textList.id" textListue="@tagText.tableName" />
                    @for (int i = 0; i < textList.items.Count; i++)
                    {
                        <span class="col-sm-1">Index:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="indexEdit_@textList.id" textListue="@textList.items[i].index" />
                        <span class="col-sm-1">Path:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="pathEdit_@textList.id" textListue="@textList.items[i].value" />
                        <span class="col-sm-1">Path:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="pathEdit_@textList.id" textListue="@textList.items[i].textColor" />
                        <span class="col-sm-1">Path:</span> <input type="text" class=" col-sm-1 form-control input-xs" name="pathEdit_@textList.id" textListue="@textList.items[i].bgColor" />
                    }
                    <br />
                </div>
            </div>
        </div>
    }
}