#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using UsersDiosna;
    using UsersDiosna.Controllers;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/GraphReport/Index.cshtml")]
    public partial class _Views_GraphReport_Index_cshtml : System.Web.Mvc.WebViewPage<UsersDiosna.GraphReport.Models.GraphReportForm>
    {
        public _Views_GraphReport_Index_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 2 "..\..\Views\GraphReport\Index.cshtml"
  
    int year, month, day, hours, minutes;
    string datetimeToValue = "";
    string datetimeFromValue = "";
    if (Model.endDateTime.Ticks == 0)
    {
        year = DateTime.Now.Year;
        month = DateTime.Now.Month;
        day = DateTime.Now.Day - 1;
        hours = DateTime.Now.Hour;
        minutes = DateTime.Now.Minute;
    }
    else
    {
        year = Model.endDateTime.Year;
        month = Model.endDateTime.Month;
        day = Model.endDateTime.Day;
        hours = Model.endDateTime.Hour;
        minutes = Model.endDateTime.Minute;
    }

    string smonth = month.ToString();
    string sday = day.ToString();
    string shours = hours.ToString();
    string sminutes = minutes.ToString();

    if (month < 10)
    {
        smonth = "0" + smonth;
    }
    if (day < 10)
    {
        sday = "0" + day;
    }
    if (hours < 10)
    {
        shours = "0" + hours;
    }
    if (minutes < 10)
    {
        sminutes = "0" + sminutes;
    }
    if (day < 1)
    {
        sday = "28";
    }

    datetimeFromValue = year + "-" + smonth + "-" + sday + "T" + shours + ":" + sminutes;

    if (Model.beginDateTime.Ticks == 0)
    {
        year = DateTime.Now.Year;
        month = DateTime.Now.Month;
        day = DateTime.Now.Day;
        hours = DateTime.Now.Hour;
        minutes = DateTime.Now.Minute;
    }
    else
    {
        year = Model.beginDateTime.Year;
        month = Model.beginDateTime.Month;
        day = Model.beginDateTime.Day;
        hours = Model.beginDateTime.Hour;
        minutes = Model.beginDateTime.Minute;
    }
    smonth = month.ToString();
    sday = day.ToString();
    shours = hours.ToString();
    sminutes = minutes.ToString();
    if (month < 10)
    {
        smonth = "0" + month;
    }
    if (day < 10)
    {
        sday = "0" + day;
    }
    if (day < 1)
    {
        sday = "28";
    }
    if (hours < 10)
    {
        shours = "0" + hours;
    }
    if (minutes < 10)
    {
        sminutes = "0" + minutes;
    }
    datetimeToValue = year + "-" + smonth + "-" + sday + "T" + shours + ":" + sminutes;

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 93 "..\..\Views\GraphReport\Index.cshtml"
 using (Html.BeginForm("Index", "GraphReport",FormMethod.Post))
{
    
            
            #line default
            #line hidden
            
            #line 95 "..\..\Views\GraphReport\Index.cshtml"
Write(Html.AntiForgeryToken());

            
            #line default
            #line hidden
            
            #line 95 "..\..\Views\GraphReport\Index.cshtml"
                            

            
            #line default
            #line hidden
WriteLiteral("    <!-- date time from -->\r\n");

WriteLiteral("    <div");

WriteLiteral(" class=\"form-item\"");

WriteLiteral(">\r\n        <div>\r\n");

WriteLiteral("            ");

            
            #line 99 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.LabelFor(model => model.beginDateTime));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div>\r\n");

WriteLiteral("            ");

            
            #line 102 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.TextBoxFor(model => model.beginDateTime, new { @class = "date-time", id = "date-time_from", type = "datetime-local", Value = @datetimeFromValue }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

WriteLiteral("    <!-- datetime to -->\r\n");

WriteLiteral("    <div");

WriteLiteral(" class=\"form-item\"");

WriteLiteral(">\r\n        <div>\r\n");

WriteLiteral("            ");

            
            #line 108 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.LabelFor(model => model.endDateTime));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n        <div>\r\n");

WriteLiteral("            ");

            
            #line 111 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.TextBoxFor(model => model.endDateTime, new { @id = "date-time_to", @class = "date-time", @type = "datetime-local", Value = @datetimeToValue }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

WriteLiteral("   <hr />\r\n");

WriteLiteral("    <!-- multiple selection list -->\r\n");

WriteLiteral("    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 117 "..\..\Views\GraphReport\Index.cshtml"
   Write(Html.LabelFor(model => model.tags, htmlAttributes: new { @class = "control-label col-lg-2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" class=\"col-md-9\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 119 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.ListBoxFor(model => model.tags, Model.tagList, new { @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 120 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.ValidationMessageFor(model => model.tags, "", new { @class = "text-danger" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

WriteLiteral("    <!-- count of graphs to view all of tags -->\r\n");

WriteLiteral("    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n");

WriteLiteral("        ");

            
            #line 125 "..\..\Views\GraphReport\Index.cshtml"
   Write(Html.LabelFor(model => model.graphsCount, htmlAttributes: new { @class = "control-label col-lg-2" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        <div");

WriteLiteral(" class=\"col-md-2\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 127 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.TextBoxFor(model => model.graphsCount, new { type = "number", min = 1, step = 1, @class = "form-control" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 128 "..\..\Views\GraphReport\Index.cshtml"
       Write(Html.ValidationMessageFor(model => model.graphsCount, "", new { @class = "text-danger" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

            
            #line 131 "..\..\Views\GraphReport\Index.cshtml"


            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-lg-offset-9 col-lg-3\"");

WriteLiteral(">\r\n            <input");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" value=\"View Graph\"");

WriteLiteral(" class=\"btn btn-primary\"");

WriteLiteral(" />\r\n        </div>\r\n    </div>\r\n");

            
            #line 137 "..\..\Views\GraphReport\Index.cshtml"
}
            
            #line default
            #line hidden
        }
    }
}
#pragma warning restore 1591
